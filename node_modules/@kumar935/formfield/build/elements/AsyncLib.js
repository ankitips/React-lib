"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AsyncVKeyboard = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var AsyncLib = function (_PureComponent) {
  _inherits(AsyncLib, _PureComponent);

  function AsyncLib(props) {
    _classCallCheck(this, AsyncLib);

    var _this = _possibleConstructorReturn(this, (AsyncLib.__proto__ || Object.getPrototypeOf(AsyncLib)).call(this, props));

    _this.state = {
      Component: null
    };
    return _this;
  }

  _createClass(AsyncLib, [{
    key: "componentWillMount",
    value: function componentWillMount() {
      var _this2 = this;

      if (!this.state.Component) {
        this.props.moduleProvider.then(function (Component) {
          _this2.setState({
            Component: _this2.props.modKey ? Component[_this2.props.modKey] : Component
          }, function () {
            if (_this2.props.onRef) {
              _this2.props.onRef(_this2.component);
            } else {
              console.error("define onRef function");
            }
          });
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.props.onRef) this.props.onRef(null);
    }
  }, {
    key: "render",
    value: function render() {
      var _this3 = this;

      var Component = this.state.Component;
      //so modKey is basically the key inside the promise object the library's constructor is.

      var _props = this.props,
          modKey = _props.modKey,
          moduleProvider = _props.moduleProvider,
          onRef = _props.onRef,
          actualProps = _objectWithoutProperties(_props, ["modKey", "moduleProvider", "onRef"]);

      // The magic happens here!


      return _react2.default.createElement(
        "div",
        null,
        Component ? _react2.default.createElement(Component, _extends({}, actualProps, { ref: function ref(k) {
            return _this3.component = k;
          } })) : _react2.default.createElement("div", { className: "loader-s" })
      );
    }
  }]);

  return AsyncLib;
}(_react.PureComponent);

exports.default = AsyncLib;


var AsyncVKeyboard = function AsyncVKeyboard(props) {
  return _react2.default.createElement(AsyncLib, _extends({ moduleProvider: import( /* webpackChunkName: "v-keyboard" */'react-virtual-keyboard'), modKey: "default" }, props));
};

exports.AsyncVKeyboard = AsyncVKeyboard;