'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validationProfilesConfig = undefined;

var _Constants = require('./Constants');

var validationProfilesConfig = exports.validationProfilesConfig = {
  default: function _default(val, props) {
    if (val === '') {
      var emptyErr = _Constants.ERROR_MSGS.FIELD_EMPTY;
      if (props.config.emptyErrKey) {
        emptyErr = props.config.emptyErrKey;
      }
      return {
        valid: false,
        errorMsg: emptyErr
      };
    } else if (props.config.sizeRange) {
      var min = props.config.sizeRange[0] || 0;
      var max = props.config.sizeRange[1] || Infinity;
      var exact = min === max;
      if (val.length <= max && val.length >= min) {
        return {
          valid: true
        };
      } else {
        return {
          valid: false,
          errorMsg: 'Length of ' + props.config.label + ' should be ' + (exact ? min : 'between ' + min + ' and ' + max) + ' ' + (props.config.type === 'number' ? 'digits' : 'characters')
        };
      }
    } else {
      return {
        valid: true
      };
    }
  },
  noSpaces: function noSpaces(val) {
    var containsSpace = /\s/g.test(val);
    return {
      valid: !containsSpace,
      errorMsg: _Constants.ERROR_MSGS.NO_SPACES
    };
  },
  noNumbers: function noNumbers(val) {
    var hasNumber = /\d/.test(val);
    return {
      valid: !hasNumber,
      errorMsg: _Constants.ERROR_MSGS.NO_NUMBERS
    };
  },
  theseSpChNotAllowed: function theseSpChNotAllowed(val) {
    var containsUnwantedSpChars = /[#^&*()_+\-=\[\]{};':"\\|,.<>\/?`~]/.test(val);
    return {
      valid: !containsUnwantedSpChars,
      errorMsg: _Constants.ERROR_MSGS.THESE_SP_CH_NOT_ALLOWED
    };
  },
  password: function password(val) {
    var containsDigits = /[0-9]/.test(val);
    var containsUpper = /[A-Z]/.test(val);
    var containsLower = /[a-z]/.test(val);
    var containsSpecialChars = /[!@%$]/.test(val);
    var containsUnwantedSpChars = /[#^&*()_+\-=\[\]{};':"\\|,.<>\/?`~]/.test(val);

    if (containsDigits && containsUpper && containsLower && containsSpecialChars && !containsUnwantedSpChars) {
      return {
        valid: true
      };
    } else {
      return {
        valid: false,
        errorMsg: _Constants.ERROR_MSGS.PWD_INVALID
      };
    }
  },
  email: function email(val) {
    var valid = /^([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x22([^\x0d\x22\x5c\x80-\xff]|\x5c[\x00-\x7f])*\x22))*\x40([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d)(\x2e([^\x00-\x20\x22\x28\x29\x2c\x2e\x3a-\x3c\x3e\x40\x5b-\x5d\x7f-\xff]+|\x5b([^\x0d\x5b-\x5d\x80-\xff]|\x5c[\x00-\x7f])*\x5d))*$/.test(val);
    return {
      valid: valid,
      errorMsg: _Constants.ERROR_MSGS.INVALID_EMAIL
    };
  },
  spCharacterNotAllowed: function spCharacterNotAllowed(val) {
    var notAllowed = /[ !@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/.test(val);
    return {
      valid: !notAllowed,
      errorMsg: _Constants.ERROR_MSGS.SP_CH_NOT_ALLOWED
    };
  },
  onlyAlphabets: function onlyAlphabets(val) {
    var valid = /^[a-zA-Z]*$/.test(val);
    return {
      valid: valid,
      errorMsg: _Constants.ERROR_MSGS.ONLY_ALPHABETS
    };
  },
  "regex_^[a-zA-Z]*$": function regex_AZAZ$(val) {
    return this.onlyAlphabets(val);
  }
};